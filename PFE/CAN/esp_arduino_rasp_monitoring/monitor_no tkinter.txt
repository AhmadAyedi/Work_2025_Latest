# -*- coding: utf-8 -*-
import can
import time

# Initialize CAN interface (update 'can0' if needed)
can_interface = "can0"
bus = can.interface.Bus(channel=can_interface, bustype="socketcan")

print("Raspberry Pi CAN Monitor Started...")

# Variables to track statistics
message_count = 0
total_data_length = 0
start_time = time.time()
last_time = time.time()

while True:
    message = bus.recv()  # Receive a message from the CAN bus
    if message:
        # Track message count and total data length
        message_count += 1
        total_data_length += len(message.data)
        
        # Track message speed (messages per second)
        current_time = time.time()
        time_diff = current_time - last_time
        if time_diff > 0:
            message_speed = 1 / time_diff
        else:
            message_speed = 0
        last_time = current_time
        
        # Dynamic sender and receiver determination based on arbitration ID
        if message.arbitration_id == 0x100:
            sender = "ESP32"
            receiver = "Arduino Uno"
        elif message.arbitration_id == 0x200:
            sender = "Arduino Uno"
            receiver = "ESP32"
        else:
            sender = "Unknown"
            receiver = "Unknown"

        # Extract data bytes
        tempInt = (message.data[0] << 8) | message.data[1]
        humInt = (message.data[2] << 8) | message.data[3]

        temperature = tempInt / 100.0
        humidity = humInt / 100.0

        # Calculate performance statistics
        elapsed_time = current_time - start_time
        if elapsed_time > 0:
            average_data_length = total_data_length / message_count
            messages_per_second = message_count / elapsed_time
        else:
            average_data_length = 0
            messages_per_second = 0

        # Print message information and performance stats
        print(f"\n--- CAN Communication Log ---")
        print(f"Sender: {sender}")
        print(f"Receiver: {receiver}")
        print(f"Temperature: {temperature:.2f} \u00b0C")
        print(f"Humidity: {humidity:.2f} %")
        print(f"Raw Data: {message.data}")
        print(f"Data Length: {len(message.data)} bytes")
        print(f"Message Speed: {message_speed:.2f} messages per second")
        print(f"Messages Received: {message_count}")
        print(f"Average Data Length: {average_data_length:.2f} bytes")
        print(f"Messages per Second: {messages_per_second:.2f}")
        print("----------------------------")
