/*
 * LinMaster.hpp
 *
 *  Created on: Apr 4, 2025
 *      Author: Mediatek
 */

#ifndef INC_LINMASTER_HPP_
#define INC_LINMASTER_HPP_

#include "main.h"  // For UART_HandleTypeDef and HAL
#include <string>

class LinMaster {
private:
    UART_HandleTypeDef* huart;  // Pointer to UART handle
    uint8_t lin_frame[20];      // Buffer for LIN frame
    uint8_t id;                 // LIN ID
    std::string data;           // Data to send (e.g., "Hello")

    // Private methods
    uint8_t computeParity(uint8_t id);
    uint8_t computeChecksum(const uint8_t* data, uint8_t len, uint8_t pid);

public:
    // Constructor
    LinMaster(UART_HandleTypeDef* uartHandle, uint8_t linId, const std::string& initialData);

    // Public method to send the LIN frame
    void sendFrame();

    // Getter for frame buffer (for debugging or external use)
    const uint8_t* getFrame() const { return lin_frame; }
};

#endif /* INC_LINMASTER_HPP_ */
